{"version":3,"file":"file.js","sourceRoot":"","sources":["../../src/utils/file.ts"],"names":[],"mappings":";;;;;AAAA,wDAA0B;AAC1B,8CAAsB;AAEtB,MAAM,yBAAyB,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;AAEjD,KAAK,UAAU,SAAS,CAAC,MAAc,EAAE,UAAkB,EAAE,UAAkB,yBAAyB;IACtG,MAAM,WAAW,GAAG,kBAAE,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;IACrD,MAAM,MAAM,GAAG,aAAG,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;IAC/C,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAEzB,MAAM,IAAI,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;QAC7B,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;QAC9B,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;AACL,CAAC;AAEQ,8BAAS","sourcesContent":["import fs from 'fs-extra';\nimport got from 'got';\n\nconst MAX_S3_FILE_FETCH_TIMOEUT = 1000 * 60 * 20;\n\nasync function fetchFile(srcUrl: string, outputPath: string, timeout: number = MAX_S3_FILE_FETCH_TIMOEUT) {\n  const writeStream = fs.createWriteStream(outputPath);\n  const stream = got.stream(srcUrl, { timeout });\n  stream.pipe(writeStream);\n\n  await new Promise((res, rej) => {\n    stream.on('end', () => res());\n    stream.on('error', (err) => rej(err));\n  });\n}\n\nexport { fetchFile };\n"]}