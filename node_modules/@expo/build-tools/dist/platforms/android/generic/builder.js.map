{"version":3,"file":"builder.js","sourceRoot":"","sources":["../../../../src/platforms/android/generic/builder.ts"],"names":[],"mappings":";;;;;AAAA,gDAAwB;AAGxB,oDAA+C;AAC/C,iEAAyC;AACzC,sDAAoD;AAGpD,KAAK,UAAU,YAAY,CAAC,GAAkC;IAC5D,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC;IAE5B,MAAM,EAAE,cAAc,EAAE,sBAAsB,EAAE,GAAG,MAAM,eAAK,CAAC,GAAG,CAAC,CAAC;IAEpE,MAAM,CAAC,IAAI,CAAC,8CAA8C,CAAC,CAAC;IAC5D,MAAM,EAAE,WAAW,EAAE,EAAE,QAAQ,EAAE,EAAE,GAAG,GAAG,CAAC;IAC1C,MAAM,YAAY,GAAG,cAAI,CAAC,IAAI,CAAC,cAAc,EAAE,QAAQ,CAAC,YAAY,CAAC,CAAC;IACtE,MAAM,0BAAY,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;IAE3C,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;IACrC,MAAM,YAAY,GAAG;QACnB,iBAAiB,EAAE,QAAQ,CAAC,gBAAgB;QAC5C,SAAS,EAAE,QAAQ,CAAC,QAAQ;QAC5B,YAAY,EAAE,QAAQ,CAAC,WAAW;KACnC,CAAC;IACF,MAAM,CAAC,KAAK,CAAC,sBAAsB,GAAG,CAAC,aAAa,QAAQ,sBAAsB,EAAE,CAAC,CAAC;IACtF,MAAM,eAAK,CACT,WAAW,EACX,CAAC,GAAG,CAAC,aAAa,CAAC,EACnB;QACE,GAAG,EAAE,sBAAsB;QAC3B,MAAM;QACN,GAAG,EAAE;YACH,GAAG,OAAO,CAAC,GAAG;YACd,GAAG,YAAY;SAChB;KACF,CACF,CAAC;IAEF,OAAO,cAAI,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,YAAY,CAAC,CAAC;AACrD,CAAC;AAED,kBAAe,YAAY,CAAC","sourcesContent":["import path from 'path';\n\nimport { BuilderCtx } from '../../../context';\nimport { setup } from '../../../utils/project';\nimport spawn from '../../../utils/spawn';\nimport { saveKeystore } from '../utils/buildConfig';\nimport { GenericAndroidJob } from './job';\n\nasync function buildGeneric(ctx: BuilderCtx<GenericAndroidJob>): Promise<string> {\n  const { job, logger } = ctx;\n\n  const { buildDirectory, nativeProjectDirectory } = await setup(ctx);\n\n  logger.info('Writing keystore to the project\\'s directory');\n  const { credentials: { keystore } } = job;\n  const keystorePath = path.join(buildDirectory, keystore.keystorePath);\n  await saveKeystore(keystore, keystorePath);\n\n  logger.info('Starting gradle build');\n  const keystoreEnvs = {\n    KEYSTORE_PASSWORD: keystore.keystorePassword,\n    KEY_ALIAS: keystore.keyAlias,\n    KEY_PASSWORD: keystore.keyPassword,\n  };\n  logger.debug(`Running './gradlew ${job.gradleCommand}' in ${nativeProjectDirectory}`);\n  await spawn(\n    './gradlew',\n    [job.gradleCommand],\n    {\n      cwd: nativeProjectDirectory,\n      logger,\n      env: {\n        ...process.env,\n        ...keystoreEnvs,\n      },\n    },\n  );\n\n  return path.join(buildDirectory, job.artifactPath);\n}\n\nexport default buildGeneric;\n"]}