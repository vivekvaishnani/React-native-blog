import path from 'path';

import fs from 'fs-extra';

import BuildConfigSchema from './schema';
import { BuildConfig } from './types';

const BUILD_CONFIG_FILE = 'turtle.json';

async function read(buildDir: string) {
  const buildConfigFilePath = path.join(buildDir, BUILD_CONFIG_FILE);
  let turtleJSONRaw;
  try {
    const turtleJSONContents = await fs.readFile(buildConfigFilePath, 'utf8');
    turtleJSONRaw = JSON.parse(turtleJSONContents);
  } catch (err) {
    throw new Error(`${BUILD_CONFIG_FILE} must exist in the project root directory and consist a valid json`);
  }

  const { value: credentials, error } = BuildConfigSchema.validate<BuildConfig>(
    turtleJSONRaw,
    {
      stripUnknown: true,
      convert: true,
      abortEarly: false,
    },
  );
  if (error) {
    throw new Error(`${BUILD_CONFIG_FILE} is not valid`);
  }

  return credentials;
}

export default read;
