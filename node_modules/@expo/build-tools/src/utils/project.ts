import path from 'path';

import { BuilderCtx } from '../context';
import { BaseAndroidJob } from '../platforms/android/baseJob';
import { BaseiOSJob } from '../platforms/ios/baseJob';
import { fetchFile } from './file';
import spawn from './spawn';

type Job = BaseAndroidJob | BaseiOSJob;

async function setup(ctx: BuilderCtx<Job>) {
  const { job, logger } = ctx;

  const buildDirectory = path.join(ctx.workingdir, 'build');
  const projectTarball = path.join(ctx.workingdir, 'project.tar.gz');

  logger.info({ projectUrl: job.projectUrl }, 'Download project archive');
  await fetchFile(job.projectUrl, projectTarball);

  logger.info('Unpacking project archive');
  await spawn(
    'tar',
    ['--strip-components', '1', '-zxf', 'project.tar.gz', '-C', buildDirectory],
    { cwd: ctx.workingdir, logger },
  );

  logger.info('Running yarn');
  await spawn('yarn', ['install'], { cwd: buildDirectory, logger });

  const nativeProjectDirectory = path.join(buildDirectory, job.nativeProjectDirectory);

  return {
    buildDirectory,
    nativeProjectDirectory,
  };
}

export { setup };
