{"version":3,"sources":["Exp.ts"],"names":["supportedPlatforms","determineEntryPoint","projectRoot","platform","includes","Error","platforms","entry","path","relative","Transformer","Minipass","constructor","config","data","write","end","replaced","replace","displayName","name","toLowerCase","binaryExtensions","createFileTransform","transformFile","extname","undefined","extractAndInitializeTemplateApp","templateSpec","packageManager","Logger","notifications","info","code","NotificationCode","PROGRESS","extractTemplateAppAsync","appFile","JsonFile","join","appJson","readAsync","writeAsync","packageFile","packageJson","private","version","description","tags","repository","_resolved","_integrity","_from","initGitRepoAsync","installDependenciesAsync","targetPath","tarStream","pacote","tarball","stream","cache","UserSettings","dotExpoHomeDirectory","fs","mkdirp","Promise","resolve","reject","extractStream","tar","x","cwd","strip","transform","onentry","test","type","basename","on","pipe","root","insideGit","global","debug","e","errno","warn","stdio","saveRecentExpRootAsync","recentExpsJsonFile","recentExps","filter","dir","unshift","slice","getPublishInfoAsync","user","UserManager","ensureLoggedInAsync","username","exp","slug","sdkVersion","configName","remotePackageName","remoteUsername","remoteFullPackageName","iosBundleIdentifier","ios","bundleIdentifier","androidPackage","android","package","args","sendAsync","recipient","url_","allowUnauthed","result","process","env","EXPO_NEXT_API","api","ApiV2","clientForUser","postAsync","emailOrPhone","url","includeExpoLinks","Api","callMethodAsync","getProjectRandomnessAsync","ps","ProjectSettings","randomness","urlRandomness","resetProjectRandomnessAsync","UrlUtils","someRandomness","setAsync"],"mappings":"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","sourcesContent":["import { AppJSONConfig, BareAppConfig, configFilename, readConfigJsonAsync } from '@expo/config';\n\nimport { getEntryPoint } from '@expo/config/paths';\nimport fs from 'fs-extra';\nimport merge from 'lodash/merge';\nimport path from 'path';\nimport spawnAsync from '@expo/spawn-async';\nimport JsonFile from '@expo/json-file';\nimport Minipass from 'minipass';\nimport pacote, { PackageSpec } from 'pacote';\nimport tar from 'tar';\n\nimport Api from './Api';\nimport ApiV2 from './ApiV2';\nimport Logger from './Logger';\nimport NotificationCode from './NotificationCode';\nimport UserManager from './User';\nimport * as UrlUtils from './UrlUtils';\nimport UserSettings from './UserSettings';\nimport * as ProjectSettings from './ProjectSettings';\n\n// TODO(ville): update when this has landed: https://github.com/DefinitelyTyped/DefinitelyTyped/pull/36598\ntype ReadEntry = any;\n\nconst supportedPlatforms = ['ios', 'android', 'web'];\n\nexport function determineEntryPoint(projectRoot: string, platform?: string): string {\n  if (platform && !supportedPlatforms.includes(platform)) {\n    throw new Error(\n      `Failed to resolve the project's entry file: The platform \"${platform}\" is not supported.`\n    );\n  }\n  // TODO: Bacon: support platform extension resolution like .ios, .native\n  // const platforms = [platform, 'native'].filter(Boolean) as string[];\n  const platforms: string[] = [];\n\n  const entry = getEntryPoint(projectRoot, ['./index'], platforms);\n  if (!entry)\n    throw new Error(\n      `The project entry file could not be resolved. Please either define it in the \\`package.json\\` (main), \\`app.json\\` (expo.entryPoint), create an \\`index.js\\`, or install the \\`expo\\` package.`\n    );\n\n  return path.relative(projectRoot, entry);\n}\n\nclass Transformer extends Minipass {\n  data: string;\n  config: AppJSONConfig | BareAppConfig;\n\n  constructor(config: AppJSONConfig | BareAppConfig) {\n    super();\n    this.data = '';\n    this.config = config;\n  }\n  write(data: string) {\n    this.data += data;\n    return true;\n  }\n  end() {\n    let replaced = this.data\n      .replace(/Hello App Display Name/g, this.config.displayName || this.config.name)\n      .replace(/HelloWorld/g, this.config.name)\n      .replace(/helloworld/g, this.config.name.toLowerCase());\n    super.write(replaced);\n    return super.end();\n  }\n}\n\n// Binary files, don't process these (avoid decoding as utf8)\nconst binaryExtensions = ['.png', '.jar'];\n\nfunction createFileTransform(config: AppJSONConfig | BareAppConfig) {\n  return function transformFile(entry: ReadEntry) {\n    if (!binaryExtensions.includes(path.extname(entry.path)) && config.name) {\n      return new Transformer(config);\n    }\n    return undefined;\n  };\n}\n\nexport async function extractAndInitializeTemplateApp(\n  templateSpec: PackageSpec,\n  projectRoot: string,\n  packageManager: 'yarn' | 'npm' = 'npm',\n  config: AppJSONConfig | BareAppConfig\n) {\n  Logger.notifications.info({ code: NotificationCode.PROGRESS }, 'Extracting project files...');\n  await extractTemplateAppAsync(templateSpec, projectRoot, config);\n\n  // Update files\n  Logger.notifications.info({ code: NotificationCode.PROGRESS }, 'Customizing project...');\n\n  let appFile = new JsonFile(path.join(projectRoot, 'app.json'));\n  let appJson = merge(await appFile.readAsync(), config);\n  await appFile.writeAsync(appJson);\n\n  let packageFile = new JsonFile(path.join(projectRoot, 'package.json'));\n  let packageJson = await packageFile.readAsync();\n  // Adding `private` stops npm from complaining about missing `name` and `version` fields.\n  // We don't add a `name` field because it also exists in `app.json`.\n  packageJson = { ...packageJson, private: true };\n  // These are metadata fields related to the template package, let's remove them from the package.json.\n  delete packageJson.name;\n  delete packageJson.version;\n  delete packageJson.description;\n  delete packageJson.tags;\n  delete packageJson.repository;\n  // pacote adds these, but we don't want them in the package.json of the project.\n  delete packageJson._resolved;\n  delete packageJson._integrity;\n  delete packageJson._from;\n  await packageFile.writeAsync(packageJson);\n\n  await initGitRepoAsync(projectRoot);\n  await installDependenciesAsync(projectRoot, packageManager);\n\n  return projectRoot;\n}\n\nexport async function extractTemplateAppAsync(\n  templateSpec: PackageSpec,\n  targetPath: string,\n  config: AppJSONConfig | BareAppConfig\n) {\n  let tarStream = await pacote.tarball.stream(templateSpec, {\n    cache: path.join(UserSettings.dotExpoHomeDirectory(), 'template-cache'),\n  });\n  await fs.mkdirp(targetPath);\n  await new Promise((resolve, reject) => {\n    const extractStream = tar.x({\n      cwd: targetPath,\n      strip: 1,\n      // TODO(ville): pending https://github.com/DefinitelyTyped/DefinitelyTyped/pull/36598\n      // @ts-ignore property missing from the type definition\n      transform: createFileTransform(config),\n      onentry(entry: ReadEntry) {\n        if (config.name) {\n          // Rewrite paths for bare workflow\n          entry.path = entry.path\n            .replace(/HelloWorld/g, config.name)\n            .replace(/helloworld/g, config.name.toLowerCase());\n        }\n        if (/^file$/i.test(entry.type) && path.basename(entry.path) === 'gitignore') {\n          // Rename `gitignore` because npm ignores files named `.gitignore` when publishing.\n          // See: https://github.com/npm/npm/issues/1862\n          entry.path = entry.path.replace(/gitignore$/, '.gitignore');\n        }\n      },\n    });\n    tarStream.on('error', reject);\n    extractStream.on('error', reject);\n    extractStream.on('close', resolve);\n    tarStream.pipe(extractStream);\n  });\n\n  return targetPath;\n}\n\nasync function initGitRepoAsync(root: string) {\n  // let's see if we're in a git tree\n  let insideGit = true;\n  try {\n    await spawnAsync('git', ['rev-parse', '--is-inside-work-tree'], {\n      cwd: root,\n    });\n    Logger.global.debug('New project is already inside of a git repo, skipping git init.');\n  } catch (e) {\n    if (e.errno == 'ENOENT') {\n      Logger.global.warn('Unable to initialize git repo. `git` not in PATH.');\n    }\n    insideGit = false;\n  }\n\n  if (!insideGit) {\n    try {\n      await spawnAsync('git', ['init'], { cwd: root });\n      Logger.global.info('Initialized a git repository.');\n    } catch (e) {\n      // no-op -- this is just a convenience and we don't care if it fails\n    }\n  }\n}\n\nasync function installDependenciesAsync(projectRoot: string, packageManager: 'yarn' | 'npm') {\n  Logger.global.info('Installing dependencies...');\n\n  if (packageManager === 'yarn') {\n    await spawnAsync('yarnpkg', ['install'], {\n      cwd: projectRoot,\n      stdio: 'inherit',\n    });\n  } else {\n    await spawnAsync('npm', ['install'], {\n      cwd: projectRoot,\n      stdio: 'inherit',\n    });\n  }\n}\n\nexport async function saveRecentExpRootAsync(root: string) {\n  root = path.resolve(root);\n\n  // Write the recent Exps JSON file\n  const recentExpsJsonFile = UserSettings.recentExpsJsonFile();\n  let recentExps = await recentExpsJsonFile.readAsync();\n  // Filter out copies of this so we don't get dupes in this list\n  recentExps = recentExps.filter((dir: string) => dir !== root);\n  recentExps.unshift(root);\n  return await recentExpsJsonFile.writeAsync(recentExps.slice(0, 100));\n}\n\ntype PublishInfo = {\n  args: {\n    username: string;\n    remoteUsername: string;\n    remotePackageName: string;\n    remoteFullPackageName: string;\n    sdkVersion: string;\n    iosBundleIdentifier?: string | null;\n    androidPackage?: string | null;\n  };\n};\n\n// TODO: remove / change, no longer publishInfo, this is just used for signing\nexport async function getPublishInfoAsync(root: string): Promise<PublishInfo> {\n  const user = await UserManager.ensureLoggedInAsync();\n\n  if (!user) {\n    throw new Error('Attempted to login in offline mode. This is a bug.');\n  }\n\n  let { username } = user;\n\n  const { exp } = await readConfigJsonAsync(root);\n\n  const name = exp.slug;\n  const { version, sdkVersion } = exp;\n\n  const configName = configFilename(root);\n\n  if (!sdkVersion) {\n    throw new Error(`sdkVersion is missing from ${configName}`);\n  }\n\n  if (!name) {\n    // slug is made programmatically for app.json\n    throw new Error(`slug field is missing from exp.json.`);\n  }\n\n  if (!version) {\n    throw new Error(`Can't get version of package.`);\n  }\n\n  const remotePackageName = name;\n  const remoteUsername = username;\n  const remoteFullPackageName = `@${remoteUsername}/${remotePackageName}`;\n  const iosBundleIdentifier = exp.ios ? exp.ios.bundleIdentifier : null;\n  const androidPackage = exp.android ? exp.android.package : null;\n\n  return {\n    args: {\n      username,\n      remoteUsername,\n      remotePackageName,\n      remoteFullPackageName,\n      sdkVersion,\n      iosBundleIdentifier,\n      androidPackage,\n    },\n  };\n}\n\nexport async function sendAsync(recipient: string, url_: string, allowUnauthed: boolean = true) {\n  let result;\n  if (process.env.EXPO_NEXT_API) {\n    const user = await UserManager.ensureLoggedInAsync();\n    const api = ApiV2.clientForUser(user);\n    result = await api.postAsync('send-project', {\n      emailOrPhone: recipient,\n      url: url_,\n      includeExpoLinks: allowUnauthed,\n    });\n  } else {\n    result = await Api.callMethodAsync('send', [recipient, url_, allowUnauthed]);\n  }\n  return result;\n}\n\n// TODO: figure out where these functions should live\nexport async function getProjectRandomnessAsync(projectRoot: string) {\n  let ps = await ProjectSettings.readAsync(projectRoot);\n  let randomness = ps.urlRandomness;\n  if (randomness) {\n    return randomness;\n  } else {\n    return resetProjectRandomnessAsync(projectRoot);\n  }\n}\n\nexport async function resetProjectRandomnessAsync(projectRoot: string) {\n  let randomness = UrlUtils.someRandomness();\n  ProjectSettings.setAsync(projectRoot, { urlRandomness: randomness });\n  return randomness;\n}\n"],"file":"../Exp.js","sourceRoot":"/@expo/xdl@57.4.2/src"}