{"version":3,"file":"Web.js","sourceRoot":"","sources":["../src/Web.ts"],"names":[],"mappings":"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","sourcesContent":["import JsonFile from '@expo/json-file';\n\nimport { readConfigJson } from './Config';\nimport { AppJSONConfig, ExpoConfig, WebPlatformConfig, WebSplashScreen } from './Config.types';\n\nconst APP_JSON_FILE_NAME = 'app.json';\n\n// To work with the iPhone X \"notch\" add `viewport-fit=cover` to the `viewport` meta tag.\nconst DEFAULT_VIEWPORT =\n  'width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1.00001,viewport-fit=cover';\n// Use root to work better with create-react-app\nconst DEFAULT_ROOT_ID = `root`;\nconst DEFAULT_BUILD_PATH = `web-build`;\nconst DEFAULT_LANGUAGE_ISO_CODE = `en`;\nconst DEFAULT_NO_JS_MESSAGE = `Oh no! It looks like JavaScript is not enabled in your browser.`;\nconst DEFAULT_NAME = 'Expo App';\nconst DEFAULT_THEME_COLOR = '#4630EB';\nconst DEFAULT_DESCRIPTION = 'A Neat Expo App';\nconst DEFAULT_BACKGROUND_COLOR = '#ffffff';\nconst DEFAULT_START_URL = '.';\nconst DEFAULT_DISPLAY = 'standalone';\nconst DEFAULT_STATUS_BAR = 'black-translucent';\nconst DEFAULT_LANG_DIR = 'auto';\nconst DEFAULT_ORIENTATION = 'any';\nconst ICON_SIZES = [192, 512];\nconst MAX_SHORT_NAME_LENGTH = 12;\nconst DEFAULT_PREFER_RELATED_APPLICATIONS = true;\n\nexport function getWebOutputPath(config: { [key: string]: any } = {}): string {\n  if (process.env.WEBPACK_BUILD_OUTPUT_PATH) {\n    return process.env.WEBPACK_BUILD_OUTPUT_PATH;\n  }\n  const web = getWebManifestFromConfig(config);\n  const { build = {} } = web;\n  return build.output || DEFAULT_BUILD_PATH;\n}\n\nexport async function validateShortName(shortName: string): Promise<void> {\n  // Validate short name\n  if (shortName.length > MAX_SHORT_NAME_LENGTH) {\n    console.warn(\n      `PWA short name should be 12 characters or less, otherwise it'll be curtailed on the mobile device homepage. You should define web.shortName in your ${APP_JSON_FILE_NAME} as a string that is ${MAX_SHORT_NAME_LENGTH} or less characters.`\n    );\n  }\n}\n\n// Convert expo value to PWA value\nfunction ensurePWAorientation(orientation: string): string {\n  if (orientation && typeof orientation === 'string') {\n    let webOrientation = orientation.toLowerCase();\n    if (webOrientation !== 'default') {\n      return webOrientation;\n    }\n  }\n  return DEFAULT_ORIENTATION;\n}\n\nfunction sanitizePublicPath(publicPath: unknown): string {\n  if (typeof publicPath !== 'string' || !publicPath.length) {\n    return '/';\n  }\n\n  if (publicPath.endsWith('/')) {\n    return publicPath;\n  }\n  return publicPath + '/';\n}\n\nexport function getConfigForPWA(\n  projectRoot: string,\n  getAbsolutePath: (...pathComponents: string[]) => string,\n  options: object\n) {\n  const { exp } = readConfigJson(projectRoot, true, true);\n  return ensurePWAConfig(exp, getAbsolutePath, options);\n}\n\nexport function getNameFromConfig(exp: ExpoConfig = {}): { appName: string; webName: string } {\n  // For RN CLI support\n  const appManifest = exp.expo || exp;\n  const { web = {} } = appManifest;\n\n  // rn-cli apps use a displayName value as well.\n  const appName = exp.displayName || appManifest.displayName || appManifest.name || DEFAULT_NAME;\n  const webName = web.name || appName;\n\n  return {\n    appName,\n    webName,\n  };\n}\n\nfunction getWebManifestFromConfig(config: { [key: string]: any } = {}): { [key: string]: any } {\n  const appManifest = config.expo || config || {};\n  return appManifest.web || {};\n}\n\nfunction applyWebDefaults(appJSON: AppJSONConfig | ExpoConfig): ExpoConfig {\n  // For RN CLI support\n  const appManifest = appJSON.expo || appJSON || {};\n  const { web: webManifest = {}, splash = {}, ios = {}, android = {} } = appManifest;\n  const { build: webBuild = {}, webDangerous = {}, meta = {} } = webManifest;\n  const { apple = {} } = meta;\n\n  // rn-cli apps use a displayName value as well.\n  const { appName, webName } = getNameFromConfig(appJSON);\n\n  const languageISOCode = webManifest.lang || DEFAULT_LANGUAGE_ISO_CODE;\n  const noJavaScriptMessage = webDangerous.noJavaScriptMessage || DEFAULT_NO_JS_MESSAGE;\n  const rootId = webBuild.rootId || DEFAULT_ROOT_ID;\n  const buildOutputPath = getWebOutputPath(appJSON);\n  const publicPath = sanitizePublicPath(webManifest.publicPath);\n  const primaryColor = appManifest.primaryColor || DEFAULT_THEME_COLOR;\n  const description = appManifest.description || DEFAULT_DESCRIPTION;\n  // The theme_color sets the color of the tool bar, and may be reflected in the app's preview in task switchers.\n  const webThemeColor = webManifest.themeColor || primaryColor;\n  const dir = webManifest.dir || DEFAULT_LANG_DIR;\n  const shortName = webManifest.shortName || webName;\n  const display = webManifest.display || DEFAULT_DISPLAY;\n  const startUrl = webManifest.startUrl || DEFAULT_START_URL;\n  const webViewport = meta.viewport || DEFAULT_VIEWPORT;\n  const { scope, crossorigin } = webManifest;\n  const barStyle = apple.barStyle || webManifest.barStyle || DEFAULT_STATUS_BAR;\n\n  const orientation = ensurePWAorientation(webManifest.orientation || appManifest.orientation);\n\n  /**\n   * **Splash screen background color**\n   * `https://developers.google.com/web/fundamentals/web-app-manifest/#splash-screen`\n   * The background_color should be the same color as the load page,\n   * to provide a smooth transition from the splash screen to your app.\n   */\n  const backgroundColor =\n    webManifest.backgroundColor || splash.backgroundColor || DEFAULT_BACKGROUND_COLOR; // No default background color\n\n  /**\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/Manifest#prefer_related_applications\n   * Specifies a boolean value that hints for the user agent to indicate\n   * to the user that the specified native applications (see below) are recommended over the website.\n   * This should only be used if the related native apps really do offer something that the website can't... like Expo ;)\n   *\n   * >> The banner won't show up if the app is already installed:\n   * https://github.com/GoogleChrome/samples/issues/384#issuecomment-326387680\n   */\n\n  const preferRelatedApplications =\n    webManifest.preferRelatedApplications || DEFAULT_PREFER_RELATED_APPLICATIONS;\n\n  const relatedApplications = inferWebRelatedApplicationsFromConfig(appManifest);\n\n  return {\n    ...appManifest,\n    name: appName,\n    description,\n    primaryColor,\n    // Ensure these objects exist\n    ios: {\n      ...ios,\n    },\n    android: {\n      ...android,\n    },\n    web: {\n      ...webManifest,\n      meta: {\n        ...meta,\n        apple: {\n          ...apple,\n          formatDetection: apple.formatDetection || 'telephone=no',\n          mobileWebAppCapable: apple.mobileWebAppCapable || 'yes',\n          touchFullscreen: apple.touchFullscreen || 'yes',\n          barStyle,\n        },\n        viewport: webViewport,\n      },\n      build: {\n        ...webBuild,\n        output: buildOutputPath,\n        rootId,\n        publicPath,\n      },\n      dangerous: {\n        ...webDangerous,\n        noJavaScriptMessage,\n      },\n      scope,\n      crossorigin,\n      description,\n      preferRelatedApplications,\n      relatedApplications,\n      startUrl,\n      shortName,\n      display,\n      orientation,\n      dir,\n      barStyle,\n      backgroundColor,\n      themeColor: webThemeColor,\n      lang: languageISOCode,\n      name: webName,\n    },\n  };\n}\n\n/**\n * https://developer.mozilla.org/en-US/docs/Web/Manifest#related_applications\n * An array of native applications that are installable by, or accessible to, the underlying platform\n * for example, a native Android application obtainable through the Google Play Store.\n * Such applications are intended to be alternatives to the\n * website that provides similar/equivalent functionality — like the native app version of the website.\n */\nfunction inferWebRelatedApplicationsFromConfig({ web = {}, ios = {}, android = {} }: any) {\n  const relatedApplications = web.relatedApplications || [];\n\n  const { bundleIdentifier, appStoreUrl } = ios;\n  if (bundleIdentifier) {\n    const PLATFORM_ITUNES = 'itunes';\n    let iosApp = relatedApplications.some(\n      ({ platform }: { platform: string }) => platform === PLATFORM_ITUNES\n    );\n    if (!iosApp) {\n      relatedApplications.push({\n        platform: PLATFORM_ITUNES,\n        url: appStoreUrl,\n        id: bundleIdentifier,\n      });\n    }\n  }\n\n  const { package: androidPackage, playStoreUrl } = android;\n  if (androidPackage) {\n    const PLATFORM_PLAY = 'play';\n\n    const alreadyHasAndroidApp = relatedApplications.some(\n      ({ platform }: { platform: string }) => platform === PLATFORM_PLAY\n    );\n    if (!alreadyHasAndroidApp) {\n      relatedApplications.push({\n        platform: PLATFORM_PLAY,\n        url: playStoreUrl || `http://play.google.com/store/apps/details?id=${androidPackage}`,\n        id: androidPackage,\n      });\n    }\n  }\n\n  return relatedApplications;\n}\n\nfunction inferWebHomescreenIcons(\n  config: any = {},\n  getAbsolutePath: (...pathComponents: string[]) => string,\n  options: any\n) {\n  const { web = {}, ios = {} } = config;\n  if (Array.isArray(web.icons)) {\n    return web.icons;\n  }\n  let icons = [];\n  let icon;\n  if (web.icon || config.icon) {\n    icon = getAbsolutePath(web.icon || config.icon);\n  } else {\n    // Use template icon\n    icon = options.templateIcon;\n  }\n  const destination = `apple/icons`;\n  icons.push({ src: icon, size: ICON_SIZES, destination });\n  const iOSIcon = config.icon || ios.icon;\n  if (iOSIcon) {\n    const iOSIconPath = getAbsolutePath(iOSIcon);\n    icons.push({\n      ios: true,\n      sizes: 180,\n      src: iOSIconPath,\n      destination,\n    });\n  }\n  return icons;\n}\n\nfunction inferWebStartupImages(\n  config: ExpoConfig,\n  getAbsolutePath: (...pathComponents: string[]) => string,\n  options: Object\n) {\n  const { icon, splash = {}, primaryColor } = config;\n  const { web } = config;\n  // @ts-ignore\n  if (Array.isArray(web?.startupImages)) {\n    // @ts-ignore\n    return web?.startupImages;\n  }\n\n  let startupImages = [];\n\n  let splashImageSource;\n  const possibleIconSrc = web?.splash?.image || splash.image || icon;\n  if (possibleIconSrc) {\n    const resizeMode = web?.splash?.resizeMode || splash.resizeMode || 'contain';\n    const backgroundColor =\n      web?.splash?.backgroundColor || splash.backgroundColor || primaryColor || '#ffffff';\n    splashImageSource = getAbsolutePath(possibleIconSrc);\n    startupImages.push({\n      resizeMode,\n      color: backgroundColor,\n      src: splashImageSource,\n      supportsTablet:\n        web?.splash?.supportsTablet === undefined ? true : web?.splash?.supportsTablet,\n      orientation: web?.orientation,\n      destination: `apple/splash`,\n    });\n  }\n  return startupImages;\n}\n\nexport function ensurePWAConfig(\n  appJSON: AppJSONConfig | ExpoConfig,\n  getAbsolutePath: ((...pathComponents: string[]) => string) | undefined,\n  options: object\n): ExpoConfig {\n  const config = applyWebDefaults(appJSON);\n  if (getAbsolutePath) {\n    if (!config.web) config.web = {};\n    config.web.icons = inferWebHomescreenIcons(config, getAbsolutePath, options);\n    config.web.startupImages = inferWebStartupImages(config, getAbsolutePath, options);\n  }\n  return config;\n}\n\nexport function createEnvironmentConstants(appManifest: ExpoConfig, pwaManifestLocation: string) {\n  let web;\n  try {\n    web = JsonFile.read(pwaManifestLocation);\n  } catch (e) {\n    web = {};\n  }\n\n  return {\n    ...appManifest,\n    name: appManifest.displayName || appManifest.name,\n    /**\n     * Omit app.json properties that get removed during the native turtle build\n     *\n     * `facebookScheme`\n     * `facebookAppId`\n     * `facebookDisplayName`\n     */\n    facebookScheme: undefined,\n    facebookAppId: undefined,\n    facebookDisplayName: undefined,\n\n    // Remove iOS and Android.\n    ios: undefined,\n    android: undefined,\n\n    // Use the PWA `manifest.json` as the native web manifest.\n    web,\n  };\n}\n"]}