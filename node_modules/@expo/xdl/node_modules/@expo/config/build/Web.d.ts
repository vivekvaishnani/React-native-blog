import { AppJSONConfig, ExpoConfig } from './Config.types';
export declare function getWebOutputPath(config?: {
    [key: string]: any;
}): string;
export declare function validateShortName(shortName: string): Promise<void>;
export declare function getConfigForPWA(projectRoot: string, getAbsolutePath: (...pathComponents: string[]) => string, options: object): ExpoConfig;
export declare function getNameFromConfig(exp?: ExpoConfig): {
    appName: string;
    webName: string;
};
export declare function ensurePWAConfig(appJSON: AppJSONConfig | ExpoConfig, getAbsolutePath: ((...pathComponents: string[]) => string) | undefined, options: object): ExpoConfig;
export declare function createEnvironmentConstants(appManifest: ExpoConfig, pwaManifestLocation: string): {
    name: any;
    /**
     * Omit app.json properties that get removed during the native turtle build
     *
     * `facebookScheme`
     * `facebookAppId`
     * `facebookDisplayName`
     */
    facebookScheme: undefined;
    facebookAppId: undefined;
    facebookDisplayName: undefined;
    ios: undefined;
    android: undefined;
    web: import("@expo/json-file").JSONObject;
    description?: string | undefined;
    slug?: string | undefined;
    owner?: string | undefined;
    privacy?: "public" | "unlisted" | undefined;
    sdkVersion?: string | undefined;
    version?: string | undefined;
    platforms?: import("./Config.types").Platform[] | undefined;
    githubUrl?: string | undefined;
    orientation?: "landscape" | "portrait" | "default" | undefined;
    primaryColor?: string | undefined;
    icon?: string | undefined;
    notification?: {
        icon?: string | undefined;
        color?: string | undefined;
        iosDisplayInForeground?: boolean | undefined;
        androidMode?: "default" | "collapse" | undefined;
        androidCollapsedTitle?: string | undefined;
    } | undefined;
    appKey?: string | undefined;
    androidStatusBar?: {
        barStyle?: "light-content" | "dark-content" | undefined;
        backgroundColor?: string | undefined;
    } | undefined;
    androidNavigationBar?: {
        visible?: boolean | undefined;
        barStyle?: "light-content" | "dark-content" | undefined;
        backgroundColor?: string | undefined;
    } | undefined;
    androidShowExponentNotificationInShellApp?: boolean | undefined;
    scheme?: string | undefined;
    entryPoint?: string | undefined;
    extra?: {
        [key: string]: any;
    } | undefined;
    rnCliPath?: string | undefined;
    packagerOpts?: {
        [key: string]: any;
    } | undefined;
    ignoreNodeModulesValidation?: boolean | undefined;
    nodeModulesPath?: string | undefined;
    updates?: {
        enabled?: boolean | undefined;
        checkAutomatically?: "ON_ERROR_RECOVERY" | "ON_LOAD" | undefined;
        fallbackToCacheTimeout?: number | undefined;
    } | undefined;
    locales?: {
        [key: string]: any;
    } | undefined;
    isDetached?: boolean | undefined;
    detach?: {
        [key: string]: any;
        scheme?: string | undefined;
        iosExpoViewUrl?: string | undefined;
        androidExpoViewUrl?: string | undefined;
    } | undefined;
    splash?: {
        backgroundColor?: string | undefined;
        resizeMode?: "cover" | "contain" | undefined;
        image?: string | undefined;
    } | undefined;
    hooks?: {
        postPublish?: string[] | undefined;
    } | undefined;
    assetBundlePatterns?: string[] | undefined;
};
