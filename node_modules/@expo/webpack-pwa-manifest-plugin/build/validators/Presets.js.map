{"version":3,"file":"Presets.js","sourceRoot":"","sources":["../../src/validators/Presets.ts"],"names":[],"mappings":";;AAAA,sCAAwC;AAExC,gGAAgG;AAChG,MAAM,mBAAmB,GAAG;IAC1B;;;OAGG;IACH,YAAY;IACZ;;;OAGG;IACH,YAAY;IACZ;;;;OAIG;IACH,YAAY;IACZ;;OAEG;IACH,SAAS;CACV,CAAC;AAEF,MAAM,OAAO,GAAG;IACd,GAAG,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC;IAC3B,WAAW,EAAE;QACX,KAAK;QACL,SAAS;QACT,WAAW;QACX,mBAAmB;QACnB,qBAAqB;QACrB,UAAU;QACV,kBAAkB;QAClB,oBAAoB;QACpB,MAAM;KACP;IACD,OAAO,EAAE,mBAAmB;IAC5B,WAAW,EAAE,CAAC,WAAW,EAAE,iBAAiB,CAAC;CAC9C,CAAC;AAEF,SAAS,SAAS,CAAC,GAAW,EAAE,KAAU;IACxC,aAAa;IACb,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtC,CAAC;AAED,mBAAwB,MAAW,EAAE,GAAG,UAAoB;IAC1D,IAAI,CAAC,MAAM;QAAE,OAAO;IACpB,KAAK,IAAI,QAAQ,IAAI,UAAU,EAAE;QAC/B,IAAI,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC7B,IAAI,KAAK,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE;YACxC,MAAM,IAAI,oBAAW,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;SACxC;KACF;AACH,CAAC;AARD,4BAQC","sourcesContent":["import { PresetError } from '../Errors';\n\n// CSS can target this with https://developer.mozilla.org/en-US/docs/Web/CSS/@media/display-mode\nconst VALID_DISPLAY_TYPES = [\n  /**\n   * Opens the web application without any browser UI and takes up the entirety of the available display area.\n   * Fallback to: `standalone`\n   */\n  'fullscreen',\n  /**\n   * Opens the web app to look and feel like a standalone native app. The app runs in its own window, separate from the browser, and hides standard browser UI elements like the URL bar, etc.\n   * Fallback to: `minimal-ui`\n   */\n  'standalone',\n  /**\n   * This mode is similar to fullscreen, but provides the user with some means to access a minimal set of UI elements for controlling navigation (i.e., back, forward, reload, etc).\n   * > Note: Only supported by Chrome on mobile.\n   * Fallback to: `browser`\n   */\n  'minimal-ui',\n  /**\n   * A standard browser experience.\n   */\n  'browser',\n];\n\nconst presets = {\n  dir: ['ltr', 'rtl', 'auto'],\n  orientation: [\n    'any',\n    'natural',\n    'landscape',\n    'landscape-primary',\n    'landscape-secondary',\n    'portrait',\n    'portrait-primary',\n    'portrait-secondary',\n    'omit',\n  ],\n  display: VALID_DISPLAY_TYPES,\n  crossorigin: ['anonymous', 'use-credentials'],\n};\n\nfunction hasPreset(key: string, value: any): boolean {\n  // @ts-ignore\n  return presets[key].includes(value);\n}\n\nexport default function(config: any, ...properties: string[]) {\n  if (!config) return;\n  for (let property of properties) {\n    let value = config[property];\n    if (value && !hasPreset(property, value)) {\n      throw new PresetError(property, value);\n    }\n  }\n}\n"]}