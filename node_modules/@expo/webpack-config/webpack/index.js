"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Diagnosis = __importStar(require("./Diagnosis"));
const env_1 = require("./env");
const webpack_config_1 = __importDefault(require("./webpack.config"));
const addons_1 = require("./addons");
function default_1(env, argv = {}) {
    return __awaiter(this, void 0, void 0, function* () {
        const environment = env_1.validateEnvironment(env);
        const config = yield webpack_config_1.default(environment, argv);
        if (environment.info) {
            Diagnosis.reportAsync(config, environment);
        }
        const { workbox = {} } = argv;
        const publicUrl = workbox.publicUrl || env_1.getPublicPaths(environment).publicUrl;
        return addons_1.withWorkbox(config, Object.assign(Object.assign({ projectRoot: environment.projectRoot }, workbox), { publicUrl }));
    });
}
exports.default = default_1;
//# sourceMappingURL=index.js.map