{"version":3,"file":"getConfig.js","sourceRoot":"","sources":["../../src/env/getConfig.ts"],"names":[],"mappings":";;AAAA,yCAA2D;AAG3D,mCAAmC;AAEnC,SAAS,SAAS,CAAC,GAA8D;IAC/E,IAAI,GAAG,CAAC,MAAM,EAAE;QACd,OAAO,GAAG,CAAC,MAAM,CAAC;KACnB;IACD,MAAM,SAAS,GAAG,GAAG,CAAC,SAAS,IAAI,gBAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC7D,2CAA2C;IAC3C,OAAO,wBAAe,CAAC,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC,QAAQ,EAAE;QAC1D,YAAY,EAAE,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC;KACjD,CAAC,CAAC;AACL,CAAC;AAED,kBAAe,SAAS,CAAC","sourcesContent":["import { ExpoConfig, getConfigForPWA } from '@expo/config';\n\nimport { Environment } from '../types';\nimport { getPaths } from './paths';\n\nfunction getConfig(env: Pick<Environment, 'config' | 'locations' | 'projectRoot'>): ExpoConfig {\n  if (env.config) {\n    return env.config;\n  }\n  const locations = env.locations || getPaths(env.projectRoot);\n  // Fill all config values with PWA defaults\n  return getConfigForPWA(env.projectRoot, locations.absolute, {\n    templateIcon: locations.template.get('icon.png'),\n  });\n}\n\nexport default getConfig;\n"]}