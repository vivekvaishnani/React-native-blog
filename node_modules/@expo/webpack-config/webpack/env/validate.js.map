{"version":3,"file":"validate.js","sourceRoot":"","sources":["../../src/env/validate.ts"],"names":[],"mappings":"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","sourcesContent":["import chalk from 'chalk';\nimport * as yup from 'yup';\n\nimport { Environment, InputEnvironment, Report } from '../types';\nimport { getPaths } from './paths';\nimport getConfig from './getConfig';\n\nimport { enableWithPropertyOrConfig } from '../utils';\n\nconst environmentSchema = yup.object({\n  config: yup.object().notRequired(),\n  locations: yup.object().notRequired(),\n  info: yup.boolean().default(false),\n  https: yup.boolean().default(false),\n  polyfill: yup.boolean().notRequired(),\n  removeUnusedImportExports: yup.boolean().default(false),\n  pwa: yup.boolean().notRequired(),\n  projectRoot: yup.string().required(),\n  mode: yup\n    .mixed<'production' | 'development' | 'none'>()\n    .oneOf(['production', 'development', 'none']),\n  platform: yup\n    .mixed<'ios' | 'android' | 'web' | 'electron'>()\n    .oneOf(['ios', 'android', 'web', 'electron'])\n    .default('web'),\n});\n\nconst DEFAULT_REPORT = {\n  verbose: false,\n  path: 'web-report',\n  statsFilename: 'stats.json',\n  reportFilename: 'report.html',\n};\n\nconst reportSchema = yup.object({\n  verbose: yup.boolean().default(DEFAULT_REPORT.verbose),\n  path: yup.string().default(DEFAULT_REPORT.path),\n  statsFilename: yup.string().default(DEFAULT_REPORT.statsFilename),\n  reportFilename: yup.string().default(DEFAULT_REPORT.reportFilename),\n});\n\nexport function validateReport(report: boolean | Report): Report | null {\n  const reportConfig = enableWithPropertyOrConfig(report, DEFAULT_REPORT, true);\n  if (!reportConfig) return null;\n\n  const filledReport: Report = reportSchema.validateSync(reportConfig);\n  return filledReport;\n}\n\nexport function validateEnvironment(env: InputEnvironment): Environment {\n  if (typeof env.projectRoot !== 'string') {\n    throw new Error(\n      `@expo/webpack-config requires a valid projectRoot string value which points to the root of your project`\n    );\n  }\n  warnEnvironmentDeprecation(env, true);\n\n  const filledEnv: any = environmentSchema.validateSync(env);\n\n  if (!env.locations) {\n    filledEnv.locations = getPaths(env.projectRoot);\n  }\n\n  if (!env.config) {\n    filledEnv.config = getConfig(filledEnv);\n  }\n\n  if (typeof env.report !== 'undefined') {\n    filledEnv.report = validateReport(env.report);\n  }\n\n  return filledEnv;\n}\n\nlet warned: { [key: string]: boolean } = {};\n\nfunction shouldWarnDeprecated(\n  config: { [key: string]: any },\n  key: string,\n  warnOnce: boolean\n): boolean {\n  return (!warnOnce || !(key in warned)) && typeof config[key] !== 'undefined';\n}\n\nexport function warnEnvironmentDeprecation(env: InputEnvironment, warnOnce: boolean = false) {\n  const warnings: { [key: string]: string } = {\n    production: 'Please use `mode: \"production\"` instead.',\n    development: 'Please use `mode: \"development\"` instead.',\n    polyfill: '',\n  };\n\n  for (const warning of Object.keys(warnings)) {\n    if (shouldWarnDeprecated(env, warning, warnOnce)) {\n      warned[warning] = true;\n      console.warn(\n        chalk.bgYellow.black(\n          `The environment property \\`${warning}\\` is deprecated. ${warnings[warning]}`.trim()\n        )\n      );\n    }\n  }\n}\n\nexport function _resetWarnings() {\n  warned = {};\n}\n"]}