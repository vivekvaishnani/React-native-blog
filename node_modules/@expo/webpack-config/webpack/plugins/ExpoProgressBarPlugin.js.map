{"version":3,"file":"ExpoProgressBarPlugin.js","sourceRoot":"","sources":["../../src/plugins/ExpoProgressBarPlugin.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;;AAEH,kDAA0B;AAC1B,wDAAmC;AACnC,qCAAyC;AAEzC,MAAqB,qBAAsB,SAAQ,wBAAc;IAC/D;QACE,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAC9B,MAAM,OAAO,GAAG,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC;QAEvC,IAAI,CAAC,OAAO,EAAE;YACZ,KAAK,EAAE,CAAC;YACR,OAAO;SACR;QAED,IAAI,OAAO,GAAG,eAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC9B,IAAI,QAAQ,GAAG,eAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAI,QAAQ,GAAG,eAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,OAAO,CAAC;QAErD,6DAA6D;QAC7D,IAAI,SAAS,GAAG,QAAQ,GAAG,MAAM,GAAG,QAAQ,GAAG,eAAK,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/E,IAAI,OAAO,GAAG,IAAI,CAAC;QAEnB,MAAM,UAAU,GAAG;YACjB,QAAQ,EAAE,GAAG;YACb,UAAU,EAAE,GAAG;YACf,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,GAAG;YACV,KAAK,EAAE,KAAK;SACb,CAAC;QAEF,MAAM,GAAG,GAAG,IAAI,kBAAW,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAEnD,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,IAAI,WAAW,GAAG,CAAC,CAAC;QAEpB,KAAK,CAAC,CAAC,OAAO,EAAE,GAAG,EAAE,EAAE;YACrB,IAAI,CAAC,OAAO,IAAI,WAAW,KAAK,CAAC,EAAE;gBACjC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aACpB;YAED,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;YAExD,IAAI,WAAW,GAAG,UAAU,IAAI,UAAU,KAAK,CAAC,EAAE;gBAChD,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE;oBAClB,GAAG;iBACJ,CAAC,CAAC;gBACH,WAAW,GAAG,UAAU,CAAC;aAC1B;YAED,IAAI,CAAC,OAAO,EAAE;gBACZ,OAAO,GAAG,IAAI,CAAC;gBACf,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;gBACvB,WAAW,GAAG,CAAC,CAAC;aACjB;iBAAM,IAAI,OAAO,KAAK,CAAC,EAAE;gBACxB,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;gBACrB,IAAI,SAAS,GAAG,CAAC,GAAG,GAAG,SAAS,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC;gBAE/C,GAAG,CAAC,SAAS,EAAE,CAAC;gBAEhB,IAAI,OAAO,EAAE;oBACX,MAAM,CAAC,KAAK,CAAC,eAAK,CAAC,KAAK,CAAC,IAAI,CAAC,qBAAqB,GAAG,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC;iBAC5E;gBAED,OAAO,GAAG,KAAK,CAAC;aACjB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAhED,wCAgEC","sourcesContent":["/**\n * Fork of https://github.com/clessg/progress-bar-webpack-plugin\n * but with TS\n */\n\nimport chalk from 'chalk';\nimport ProgressBar from 'progress';\nimport { ProgressPlugin } from 'webpack';\n\nexport default class ExpoProgressBarPlugin extends ProgressPlugin {\n  constructor() {\n    const stream = process.stderr;\n    const enabled = stream && stream.isTTY;\n\n    if (!enabled) {\n      super();\n      return;\n    }\n\n    var barLeft = chalk.bold('[');\n    var barRight = chalk.bold(']');\n    var preamble = chalk.cyan.bold('  build ') + barLeft;\n\n    //`[:bar] ${chalk.green.bold(':percent')} (:elapsed seconds)`\n    var barFormat = preamble + ':bar' + barRight + chalk.magenta.bold(' :percent');\n    var summary = true;\n\n    const barOptions = {\n      complete: '=',\n      incomplete: ' ',\n      width: 20,\n      total: 100,\n      clear: false,\n    };\n\n    const bar = new ProgressBar(barFormat, barOptions);\n\n    let running = false;\n    let startTime = 0;\n    let lastPercent = 0;\n\n    super((percent, msg) => {\n      if (!running && lastPercent !== 0) {\n        stream.write('\\n');\n      }\n\n      var newPercent = Math.floor(percent * barOptions.width);\n\n      if (lastPercent < newPercent || newPercent === 0) {\n        bar.update(percent, {\n          msg,\n        });\n        lastPercent = newPercent;\n      }\n\n      if (!running) {\n        running = true;\n        startTime = Date.now();\n        lastPercent = 0;\n      } else if (percent === 1) {\n        var now = Date.now();\n        var buildTime = (now - startTime) / 1000 + 's';\n\n        bar.terminate();\n\n        if (summary) {\n          stream.write(chalk.green.bold('Build completed in ' + buildTime + '\\n\\n'));\n        }\n\n        running = false;\n      }\n    });\n  }\n}\n"]}