{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAGA,uDAAyC;AACzC,+BAA4D;AAC5D,sEAA6C;AAC7C,qCAAuC;AAEvC,mBACE,GAAqB,EACrB,OAAkB,EAAE;;QAEpB,MAAM,WAAW,GAAgB,yBAAmB,CAAC,GAAG,CAAC,CAAC;QAE1D,MAAM,MAAM,GAAqC,MAAM,wBAAa,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAExF,IAAI,WAAW,CAAC,IAAI,EAAE;YACpB,SAAS,CAAC,WAAW,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;SAC5C;QAED,MAAM,EAAE,OAAO,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC;QAE9B,MAAM,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,oBAAc,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC;QAE7E,OAAO,oBAAW,CAAC,MAAM,gCAAI,WAAW,EAAE,WAAW,CAAC,WAAW,IAAK,OAAO,KAAE,SAAS,IAAG,CAAC;IAC9F,CAAC;CAAA;AAjBD,4BAiBC","sourcesContent":["import { Configuration } from 'webpack';\n\nimport { Arguments, DevConfiguration, Environment, InputEnvironment } from './types';\nimport * as Diagnosis from './Diagnosis';\nimport { validateEnvironment, getPublicPaths } from './env';\nimport webpackConfig from './webpack.config';\nimport { withWorkbox } from './addons';\n\nexport default async function(\n  env: InputEnvironment,\n  argv: Arguments = {}\n): Promise<Configuration | DevConfiguration> {\n  const environment: Environment = validateEnvironment(env);\n\n  const config: Configuration | DevConfiguration = await webpackConfig(environment, argv);\n\n  if (environment.info) {\n    Diagnosis.reportAsync(config, environment);\n  }\n\n  const { workbox = {} } = argv;\n\n  const publicUrl = workbox.publicUrl || getPublicPaths(environment).publicUrl;\n\n  return withWorkbox(config, { projectRoot: environment.projectRoot, ...workbox, publicUrl });\n}\n"]}