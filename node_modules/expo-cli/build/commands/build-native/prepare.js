"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.prepareJob = prepareJob;

function _buildTools() {
  const data = require("@expo/build-tools");

  _buildTools = function () {
    return data;
  };

  return data;
}

async function prepareJob(options, projectUrl, projectDir) {
  const credentials = await getPlatformCredentials(options.platform, projectDir);
  const rawJob = {
    credentials,
    platform: options.platform,
    projectUrl,
    type: options.type
  };

  const {
    value,
    error
  } = _buildTools().JobSchema.validate(rawJob);

  if (error) {
    throw error;
  } else {
    return value;
  }
}

async function getPlatformCredentials(platform, projectDir) {
  const jsonCredentials = await _buildTools().BuildConfig.read(projectDir);

  if (platform === _buildTools().Platform.Android) {
    return await _buildTools().BuildConfig.prepareAndroidJobCredentials(jsonCredentials);
  } else if (platform === _buildTools().Platform.iOS) {
    return await _buildTools().BuildConfig.prepareiOSJobCredentials(jsonCredentials);
  } else {
    throw new Error('Unsupported platform');
  }
}
//# sourceMappingURL=../../__sourcemaps__/commands/build-native/prepare.js.map
